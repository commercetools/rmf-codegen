buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
}

plugins {
    // Here we define all plugins that are used by subprojects and specify the version for external ones

    id 'idea'
    id 'eclipse'

    id 'maven'
    id 'maven-publish'

    id 'java'
    id 'java-library' // needed to make sure that transitive deps have 'compile' scope
    id 'groovy'
    id 'java-gradle-plugin'

    id 'net.ltgt.apt-idea' version '0.18'

    id 'de.undercouch.download' version '3.4.3'
    id 'com.jfrog.bintray' version '1.8.3'
    
    id 'com.gradle.plugin-publish' version '0.9.1'
    id 'org.inferred.processors' version '1.2.16'
}

ext {
    versions = [
            spock: "1.1-groovy-2.4",
            rmf: "0.2.0-20190516132601",
            kotlin: "1.3.10 "
    ]
}

import java.text.SimpleDateFormat

def globalVersion = new Version("1.0.0-SNAPSHOT")

class Version {
    String originalVersion
    String thisVersion
    String status
    Date buildTime

    Version(String versionValue) {
        buildTime = new Date()
        originalVersion = versionValue
        if (originalVersion.endsWith('-SNAPSHOT')) {
            status = 'integration'
            thisVersion = originalVersion.substring(0, originalVersion.length() - 'SNAPSHOT'.length()) + getTimestamp()
        } else {
            status = 'release'
            thisVersion = versionValue
        }
    }

    String getTimestamp() {
        // Convert local file timestamp to UTC
        def format = new SimpleDateFormat('yyyyMMddHHmmss')
        format.setCalendar(Calendar.getInstance(TimeZone.getTimeZone('UTC')))
        return format.format(buildTime)
    }

    String toString() {
        thisVersion
    }
}

subprojects { project ->
    repositories {
        mavenCentral()
        jcenter()
    }

    apply plugin: 'idea'
    apply plugin: 'eclipse'

    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    apply plugin: 'java'
    apply plugin: 'java-library' // needed to make sure that transitive deps have 'compile' scope
    apply plugin: 'groovy'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'net.ltgt.apt-idea'

    group='io.vrap.rmf.codegen'
    version=globalVersion

    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    bintray {
        user = System.getenv('BINTRAY_USER')
        key = System.getenv('BINTRAY_KEY')
        publications = [ 'Maven' ]
        publish = true

        pkg {
            repo = 'vrapio'
            name = 'rmf'
            userOrg = 'vrapio'
            licenses = ['MIT']
            vcsUrl = 'https://github.com/vrapio/rmf-codegen'
        }
    }

    sourceCompatibility = 1.8
}
