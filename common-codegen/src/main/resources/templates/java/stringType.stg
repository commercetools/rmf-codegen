import "description.stg"

template(input) ::=
<<
package <input.typeName.packageName>;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.String;
import java.util.Arrays;
import java.util.Optional;
import javax.annotation.Generated;

<description(input)>
@Generated(
    value = "io.vrap.rmf.codegen.common.generator.core.STCodeGenerator",
    comments = "https://github.com/vrapio/rmf-codegen"
)
public enum <input.typeName.simpleClassName> {

  <input.enumJsonNames:{ item |<developEnum(item)>};separator=",\n\n">;

  private final String jsonName;

  private <input.typeName.simpleClassName>(final String jsonName) {
    this.jsonName = jsonName;
  }

  public String getJsonName() {
     return jsonName;
  }

  public static Optional\<<input.typeName.simpleClassName>\> findEnumViaJsonName(String jsonName) {
    return Arrays.stream(values()).filter(t -> t.getJsonName().equals(jsonName)).findFirst();
  }
}

>>
developEnum(enumLiteral) ::=
<<
@JsonProperty("<enumLiteral>")
<enumLiteral.enumValueName>("<enumLiteral>")
>>