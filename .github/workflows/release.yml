on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

name: AutoRelease (GitHub & native images)

jobs:
  build-native:
    name: Build all native images
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: Linux
            artifact: rmf-codegen.linux
          - os: macos-latest
            name: Mac OS X
            artifact: rmf-codegen.darwin
          # TODO windows fails, reason not known yet
          # - os: windows-latest
          #   name: Windows
          #   artifact: rmf-codegen.win32
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "11"

      - name: Build ${{ matrix.name }} native image
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: nativeImage
          build-root-directory: tools/cli-application

      - name: Upload ${{ matrix.name }} native image
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.artifact }}
          path: ./tools/cli-application/build/graal/rmf-codegen

  release:
    name: Build JAR and Release the artifacts
    runs-on: ubuntu-latest
    needs: build-native
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "11"

      - name: Build JAR
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: build
          build-root-directory: tools/cli-application

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d_%H-%M-%S')"

      - name: Download native build artifacts
        uses: actions/download-artifact@v2

      - name: Commit new version to README and install script
        uses: stefanzweifel/git-auto-commit-action@v4.6.0
        with:
          commit_message: "TASK: Updating version in README"
          commit_user_name: Auto Mation
          commit_user_email: automation@commercetools.com
          commit_author: Auto Mation <automation@commercetools.com>

      - name: Create GitHub Release
        id: create_github_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload JAR
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_github_release.outputs.upload_url }}
          asset_path: rmf-gen.jar
          asset_name: rmf-codegen.jar
          asset_content_type: application/java-archive

      - name: Upload Linux Binary
        id: upload-linux-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_github_release.outputs.upload_url }}
          asset_path: rmf-codegen.linux/rmf-codegen
          asset_name: rmf-codegen.linux
          asset_content_type: application/octet-stream

      - name: Upload Mac OS Binary
        id: upload-mac-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_github_release.outputs.upload_url }}
          asset_path: rmf-codegen.darwin/rmf-codegen
          asset_name: rmf-codegen.darwin
          asset_content_type: application/octet-stream

      # - name: Upload Windows Binary
      #   id: upload-windows-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_github_release.outputs.upload_url }}
      #     asset_path: rmf-codegen.win32/rmf-codegen
      #     asset_name: rmf-codegen.exe
      #     asset_content_type: application/octet-stream
