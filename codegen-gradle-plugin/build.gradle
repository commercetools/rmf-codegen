//apply plugin: 'java'
//apply plugin: 'java-gradle-plugin'
//apply plugin: 'com.gradle.plugin-publish'


//sourceCompatibility = 1.8
//
//dependencies {
//    compile project(':common-codegen')
//    compile gradleApi()
//
//    testCompile 'junit:junit:4.12'
//    testCompile gradleTestKit()
//    testCompile "org.spockframework:spock-core:${versions.spock}"
//    testCompile "org.assertj:assertj-core:3.10.0"
//}

//
//gradlePlugin {
//    plugins {
//        gradlePlugin {
//            id = 'io.vrap.rmf.codegen-plugin'
//            implementationClass = 'io.vrap.rmf.codegen.plugin.RamlCodegenPlugin'
//
//        }
//    }
//}
//
//pluginBundle {
//    website = 'http://www.vrap.io/'
//    vcsUrl = 'https://github.com/vrapio/rmf-codegen/tree/master/codegen-gradle-plugin'
//    plugins {
//        gradlePlugin {
//            id = 'io.vrap.rmf.codegen-plugin'
//            displayName = 'Raml codegenerator for java'
//            description = 'This a code generator for the ramle specification, the supported language for this version is java'
//            tags = ['RAML', 'java']
//        }
//    }
//}
//
//task createClasspathManifest {
//    def outputDir = file("$buildDir/testClasspath")
//    inputs.files sourceSets.main.runtimeClasspath
//    outputs.dir outputDir
//    doLast {
//        outputDir.mkdirs()
//        file("$outputDir/plugin-under-test-metadata.properties").text = "implementation-classpath="+sourceSets.main.runtimeClasspath.join(":")
//    }
//}
//
//// Add the classpath file to the test runtime classpath
//dependencies {
//    testRuntime files(createClasspathManifest)
//}
//
//
//compileJava.finalizedBy(createClasspathManifest)
